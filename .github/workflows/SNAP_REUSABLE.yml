name: Snap

on:
  workflow_call:
    inputs:
      arch:
        required: false
        type: string
        default: x86_64
      osnick:
        required: true
        type: string
      platform:
        required: true
        type: string
      osname:
        required: false
        type: string
        default: Linux
      pythonversion:
        required: false
        type: string
        default: 3.9
      rubyversion:
        required: false
        type: string
        default: 2.7.2
      fpmversion:
        required: false
        type: string
        default: 1.14.1
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  snap:
    name: ${{matrix.package}} snap
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ['redis-stack-server']
    env:
      target: snap
    steps:
      - uses: actions/checkout@v2
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{inputs.pythonversion}}
      - uses: ruby/setup-ruby@v1

      - uses: actions/cache@v2
        with:
          path: |
            /var/cache/apt
            /var/cache/yum
            ~/.cache/pip
            ~/.cache/pypoetry
            ~/.local/share/gem
          key: pypoetry-${{hashFiles('**/pyproject.toml', '.github/workflows/*.yml')}}-${{inputs.platform}}-${{inputs.arch}}-package

      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true
          virtualenvs-create: true
          installer-parallel: true
      - name: install packaging tools
        run: |
          gem install fpm -v ${{inputs.fpmversion}}
          poetry install
      - name: build snap
        run: |
          source .venv/bin/activate
          invoke package -o ${{inputs.osname}} -s ${{inputs.osnick}} -d ${{inputs.platform}} -a ${{inputs.arch}} -t ${{env.target}} -p ${{ matrix.package }}
          for i in `ls *.snap`; do
            sha256 $i | awk '{print $1}' > $i.sha256
          done

      - name: validate packages
        run: |
          mkdir redis-stack
          cp *.snap redis-stack/${{ matrix.package }}.${{ env.target }}
          sudo .venv/bin/pytest -m snaps

      - uses: s3-actions/s3cmd@v1.1
        with:
          provider: aws
          region: us-east-1
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: upload snapshots
        run: |
          s3cmd put -P *.${{env.target}} s3://redismodules/redis-stack/snapshots/
          s3cmd put -P *.sha256 s3://redismodules/redis-stack/snapshots/